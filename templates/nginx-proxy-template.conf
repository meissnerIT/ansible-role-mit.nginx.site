#jinja2: trim_blocks:True, lstrip_blocks:True
# Managed by ansible ({{ ansible_role_name }})
# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

{% if nginx_include_http|default(true) %}
server {
    listen 80;
    server_name {{ site }}{% if other_ssl_sites is defined %} {{ other_ssl_sites }}{% endif %}{% if other_sites is defined %} {{ other_sites }}{% endif %};
    root /dev/null;
{% if nginx_log_dir|default(false) %}
    access_log {{ nginx_log_dir }}{{ site }}-access.log;
    error_log  {{ nginx_log_dir }}{{ site }}-error.log;
{% else %}
    access_log /var/log/nginx/{{ site }}-access.log;
    error_log  /var/log/nginx/{{ site }}-error.log;
{% endif %}

{% if nginx_include_acmesh|default(true) %}    include conf.d/local-mit-acmesh.include;

{% endif %}
    location / {
{% if nginx_redirect|default(false) %}
        return 301 {{ nginx_redirect }};
{% else %}
        return 301 https://{{ site }}$request_uri;
{% endif %}
    }
}

{% endif %}
{% if other_ssl_sites is defined %}
server {
    listen 443 ssl http2;
    server_name {{ other_ssl_sites }};
    root /dev/null;
{% if nginx_log_dir|default(false) %}
    access_log {{ nginx_log_dir }}{{ site }}-access.log;
    error_log  {{ nginx_log_dir }}{{ site }}-error.log;
{% else %}
    access_log /var/log/nginx/{{ site }}-access.log;
    error_log  /var/log/nginx/{{ site }}-error.log;
{% endif %}
    include conf.d/ssl-{{ site }}.include;
    return 301 https://{{ site }}$request_uri;
}

{% endif %}
{% if nginx_include_https|default(true) %}
server {
    listen 443 ssl http2;
    server_name {{ site }};
{% if nginx_document_root is defined %}
    root {{ nginx_document_root }};
{% else %}
    root /dev/null;
{% endif %}
{% if nginx_log_dir|default(false) %}
    access_log {{ nginx_log_dir }}{{ site }}-access.log;
    error_log  {{ nginx_log_dir }}{{ site }}-error.log;
{% else %}
    access_log /var/log/nginx/{{ site }}-access.log;
    error_log  /var/log/nginx/{{ site }}-error.log;
{% endif %}

{% if nginx_client_max_body_size|default(false) %}

    client_max_body_size {{ nginx_client_max_body_size }};
    #client_body_temp_path /srv/www/{{ site }}/tmp/nginx;
{% endif %}
    include conf.d/{{ nginx_ssl_include|default('ssl-'+site+'.include') }};
{% if nginx_include_other|default(false) %}
    {% if nginx_include_other != True %}
    include conf.d/{{ nginx_include_other }};
    {% else %}
    include conf.d/server-{{ site }}.include;
    {% endif %}
{% endif %}
{% if nginx_proxy_pass|default(false) %}

    location / {
        proxy_pass          {{ nginx_proxy_pass }};
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    Host $http_host;
    }
{% endif %}
{% if nginx_proxy_pass_extended is defined %}

    location / {
        proxy_pass          {{ nginx_proxy_pass_extended }};
        proxy_pass_header   Server;
        proxy_redirect      off;
        proxy_set_header    Host $http_host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Host $server_name;
        proxy_set_header    X-Forwarded-Proto https;
    }
{% endif %}
{% if nginx_proxy_directives is defined %}

    location / {
{% for directive, value in nginx_proxy_directives.items() -%}
{% if value is mapping %}
{% for key, value2 in value.items() %}
        {{ directive }} {{ key }} {{ value2 }};
{% endfor %}
{% else %}
        {{ directive }} {{ value }};
{% endif %}
{% endfor %}
    }
{% endif %}
{% if nginx_redirect|default(false) %}

    return 301 {{ nginx_redirect }};
{% endif %}    
}
{% endif %}

