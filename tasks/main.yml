---

# Ensure default owner / group / mode (creating user fails without this)
- name: Creating /srv/www/{{ site }}
  file:
    path: /srv/www/{{ site }}
    state: directory
  when: create_dir|default(true)

- name: Creating user {{ group }}
  user:
    name: "{{ group }}"
    home: /srv/www/{{ site }}/htdocs
    create_home: no # avoid skell files
    shell: /bin/false
    system: yes

- name: Creating group {{ group }}
  group:
    name: "{{ group }}"
    system: yes

- name: Adding www-data to group {{ group }}
  shell: adduser www-data {{ group }}
  register: adduser_wwwdata
  changed_when: "'is already a member of' not in adduser_wwwdata.stdout"
  notify: Reload nginx

- name: Checking if /srv/www/{{ site }}/htdocs is a symbolic link
  stat:
    path: /srv/www/{{ site }}/htdocs
  register: stat_htdocs

- name: Creating /srv/www/{{ site }}/htdocs
  file:
    path: /srv/www/{{ site }}/htdocs
    state: directory
    owner: "{{ group }}"
    group: "{{ group }}"
    mode: 0770
  when: sym.stat.islnk is not defined or stat_htdocs.stat.islnk == False

- name: Creating /srv/www/{{ site }}/logs
  file:
    path: /srv/www/{{ site }}/logs
    state: directory
    owner: root
    group: "{{ group }}"
    mode: 0750

# doesn't work on session, don't know why
- name: Enable group adm to read /srv/www/{{ site }}/logs via ACL
  acl:
    path: /srv/www/{{ site }}/logs/
    entity: adm
    etype: group
    permissions: rx

- name: Check deprecated conf.d/ssl-site (without .include)
  command: ls /etc/nginx/conf.d/ssl-{{ site }}
  register: cmd_ls
  failed_when: cmd_ls.rc == 0
  changed_when: no

- name: Create /etc/nginx/conf.d/server-{{ site }}.conf
  template:
    src: nginx-server-template.conf
    dest: /etc/nginx/conf.d/server-{{ site }}.conf
    force: "{{ nginx_overwrite_config | default('no') }}"

- name: Create /etc/nginx/conf.d/server-{{ site }}.include
  copy:
    content: ''
    dest: /etc/nginx/conf.d/server-{{ site }}.include
    force: no
  when: nginx_include_other|default(false)

- name: Create /etc/nginx/conf.d/server-{{ site }}.htpasswd
  copy:
    content: ''
    dest: /etc/nginx/conf.d/server-{{ site }}.htpasswd
    force: no
    group: www-data
    mode: 0640
  when: nginx_include_auth_basic|default(false)

- name: Create /etc/php/{{ php_version }}/fpm/pool.d/{{ site }}.conf
  template:
    src: php-fpm-pool-template.conf
    dest: /etc/php/{{ php_version }}/fpm/pool.d/{{ site }}.conf
    force: "{{ php_fpm_overwrite_config | default('no') }}"
  when: php_version is defined
  notify: Reload php{{ php_version }}-fpm

- name: Update /etc/update-facls.conf
  lineinfile:
    path: /etc/update-facls.conf
    regexp: '^/srv/www/{{ site }}/htdocs'
    line: '/srv/www/{{ site }}/htdocs {{ group }} {{ group }}'

- name: Allow execution of service commands via sudo
  template:
    src: sudoers.d-local-group
    dest: /etc/sudoers.d/local-group-{{ group }}
    mode: 0440
    validate: visudo -cf %s

